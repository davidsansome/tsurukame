// Code generated by protoc-gen-go. DO NOT EDIT.
// source: wanikani.proto

package proto

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Meaning_Type int32

const (
	Meaning_PRIMARY   Meaning_Type = 1
	Meaning_SECONDARY Meaning_Type = 2
	// Old meaning for a radical that was changed.
	Meaning_AUXILIARY_WHITELIST Meaning_Type = 3
	// Similar (within edit distance) to an accepted reading but incorrect.
	Meaning_BLACKLIST Meaning_Type = 4
)

var Meaning_Type_name = map[int32]string{
	1: "PRIMARY",
	2: "SECONDARY",
	3: "AUXILIARY_WHITELIST",
	4: "BLACKLIST",
}

var Meaning_Type_value = map[string]int32{
	"PRIMARY":             1,
	"SECONDARY":           2,
	"AUXILIARY_WHITELIST": 3,
	"BLACKLIST":           4,
}

func (x Meaning_Type) Enum() *Meaning_Type {
	p := new(Meaning_Type)
	*p = x
	return p
}

func (x Meaning_Type) String() string {
	return proto.EnumName(Meaning_Type_name, int32(x))
}

func (x *Meaning_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Meaning_Type_value, data, "Meaning_Type")
	if err != nil {
		return err
	}
	*x = Meaning_Type(value)
	return nil
}

func (Meaning_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{0, 0}
}

// Type is only set for Kanji readings - not for Vocabulary.
type Reading_Type int32

const (
	Reading_ONYOMI  Reading_Type = 1
	Reading_KUNYOMI Reading_Type = 2
	Reading_NANORI  Reading_Type = 3
)

var Reading_Type_name = map[int32]string{
	1: "ONYOMI",
	2: "KUNYOMI",
	3: "NANORI",
}

var Reading_Type_value = map[string]int32{
	"ONYOMI":  1,
	"KUNYOMI": 2,
	"NANORI":  3,
}

func (x Reading_Type) Enum() *Reading_Type {
	p := new(Reading_Type)
	*p = x
	return p
}

func (x Reading_Type) String() string {
	return proto.EnumName(Reading_Type_name, int32(x))
}

func (x *Reading_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Reading_Type_value, data, "Reading_Type")
	if err != nil {
		return err
	}
	*x = Reading_Type(value)
	return nil
}

func (Reading_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{1, 0}
}

type Vocabulary_PartOfSpeech int32

const (
	Vocabulary_NOUN              Vocabulary_PartOfSpeech = 1
	Vocabulary_NUMERAL           Vocabulary_PartOfSpeech = 2
	Vocabulary_INTRANSITIVE_VERB Vocabulary_PartOfSpeech = 3
	Vocabulary_ICHIDAN_VERB      Vocabulary_PartOfSpeech = 4
	Vocabulary_TRANSITIVE_VERB   Vocabulary_PartOfSpeech = 5
	Vocabulary_NO_ADJECTIVE      Vocabulary_PartOfSpeech = 6
	Vocabulary_GODAN_VERB        Vocabulary_PartOfSpeech = 7
	Vocabulary_NA_ADJECTIVE      Vocabulary_PartOfSpeech = 8
	Vocabulary_I_ADJECTIVE       Vocabulary_PartOfSpeech = 9
	Vocabulary_SUFFIX            Vocabulary_PartOfSpeech = 10
	Vocabulary_ADVERB            Vocabulary_PartOfSpeech = 11
	Vocabulary_SURU_VERB         Vocabulary_PartOfSpeech = 12
	Vocabulary_PREFIX            Vocabulary_PartOfSpeech = 13
	Vocabulary_PROPER_NOUN       Vocabulary_PartOfSpeech = 14
	Vocabulary_EXPRESSION        Vocabulary_PartOfSpeech = 15
	Vocabulary_ADJECTIVE         Vocabulary_PartOfSpeech = 16
	Vocabulary_INTERJECTION      Vocabulary_PartOfSpeech = 17
	Vocabulary_COUNTER           Vocabulary_PartOfSpeech = 18
	Vocabulary_PRONOUN           Vocabulary_PartOfSpeech = 19
	Vocabulary_CONJUNCTION       Vocabulary_PartOfSpeech = 20
)

var Vocabulary_PartOfSpeech_name = map[int32]string{
	1:  "NOUN",
	2:  "NUMERAL",
	3:  "INTRANSITIVE_VERB",
	4:  "ICHIDAN_VERB",
	5:  "TRANSITIVE_VERB",
	6:  "NO_ADJECTIVE",
	7:  "GODAN_VERB",
	8:  "NA_ADJECTIVE",
	9:  "I_ADJECTIVE",
	10: "SUFFIX",
	11: "ADVERB",
	12: "SURU_VERB",
	13: "PREFIX",
	14: "PROPER_NOUN",
	15: "EXPRESSION",
	16: "ADJECTIVE",
	17: "INTERJECTION",
	18: "COUNTER",
	19: "PRONOUN",
	20: "CONJUNCTION",
}

var Vocabulary_PartOfSpeech_value = map[string]int32{
	"NOUN":              1,
	"NUMERAL":           2,
	"INTRANSITIVE_VERB": 3,
	"ICHIDAN_VERB":      4,
	"TRANSITIVE_VERB":   5,
	"NO_ADJECTIVE":      6,
	"GODAN_VERB":        7,
	"NA_ADJECTIVE":      8,
	"I_ADJECTIVE":       9,
	"SUFFIX":            10,
	"ADVERB":            11,
	"SURU_VERB":         12,
	"PREFIX":            13,
	"PROPER_NOUN":       14,
	"EXPRESSION":        15,
	"ADJECTIVE":         16,
	"INTERJECTION":      17,
	"COUNTER":           18,
	"PRONOUN":           19,
	"CONJUNCTION":       20,
}

func (x Vocabulary_PartOfSpeech) Enum() *Vocabulary_PartOfSpeech {
	p := new(Vocabulary_PartOfSpeech)
	*p = x
	return p
}

func (x Vocabulary_PartOfSpeech) String() string {
	return proto.EnumName(Vocabulary_PartOfSpeech_name, int32(x))
}

func (x *Vocabulary_PartOfSpeech) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Vocabulary_PartOfSpeech_value, data, "Vocabulary_PartOfSpeech")
	if err != nil {
		return err
	}
	*x = Vocabulary_PartOfSpeech(value)
	return nil
}

func (Vocabulary_PartOfSpeech) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{5, 0}
}

type Subject_Type int32

const (
	Subject_RADICAL    Subject_Type = 1
	Subject_KANJI      Subject_Type = 2
	Subject_VOCABULARY Subject_Type = 3
)

var Subject_Type_name = map[int32]string{
	1: "RADICAL",
	2: "KANJI",
	3: "VOCABULARY",
}

var Subject_Type_value = map[string]int32{
	"RADICAL":    1,
	"KANJI":      2,
	"VOCABULARY": 3,
}

func (x Subject_Type) Enum() *Subject_Type {
	p := new(Subject_Type)
	*p = x
	return p
}

func (x Subject_Type) String() string {
	return proto.EnumName(Subject_Type_name, int32(x))
}

func (x *Subject_Type) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(Subject_Type_value, data, "Subject_Type")
	if err != nil {
		return err
	}
	*x = Subject_Type(value)
	return nil
}

func (Subject_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{6, 0}
}

type FormattedText_Format int32

const (
	FormattedText_RADICAL    FormattedText_Format = 1
	FormattedText_KANJI      FormattedText_Format = 2
	FormattedText_JAPANESE   FormattedText_Format = 3
	FormattedText_READING    FormattedText_Format = 4
	FormattedText_VOCABULARY FormattedText_Format = 5
	FormattedText_ITALIC     FormattedText_Format = 6
	FormattedText_BOLD       FormattedText_Format = 7
	FormattedText_LINK       FormattedText_Format = 8
)

var FormattedText_Format_name = map[int32]string{
	1: "RADICAL",
	2: "KANJI",
	3: "JAPANESE",
	4: "READING",
	5: "VOCABULARY",
	6: "ITALIC",
	7: "BOLD",
	8: "LINK",
}

var FormattedText_Format_value = map[string]int32{
	"RADICAL":    1,
	"KANJI":      2,
	"JAPANESE":   3,
	"READING":    4,
	"VOCABULARY": 5,
	"ITALIC":     6,
	"BOLD":       7,
	"LINK":       8,
}

func (x FormattedText_Format) Enum() *FormattedText_Format {
	p := new(FormattedText_Format)
	*p = x
	return p
}

func (x FormattedText_Format) String() string {
	return proto.EnumName(FormattedText_Format_name, int32(x))
}

func (x *FormattedText_Format) UnmarshalJSON(data []byte) error {
	value, err := proto.UnmarshalJSONEnum(FormattedText_Format_value, data, "FormattedText_Format")
	if err != nil {
		return err
	}
	*x = FormattedText_Format(value)
	return nil
}

func (FormattedText_Format) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{12, 0}
}

type Meaning struct {
	Meaning              *string       `protobuf:"bytes,1,opt,name=meaning" json:"meaning,omitempty"`
	Type                 *Meaning_Type `protobuf:"varint,3,opt,name=type,enum=proto.Meaning_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Meaning) Reset()         { *m = Meaning{} }
func (m *Meaning) String() string { return proto.CompactTextString(m) }
func (*Meaning) ProtoMessage()    {}
func (*Meaning) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{0}
}

func (m *Meaning) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Meaning.Unmarshal(m, b)
}
func (m *Meaning) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Meaning.Marshal(b, m, deterministic)
}
func (m *Meaning) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Meaning.Merge(m, src)
}
func (m *Meaning) XXX_Size() int {
	return xxx_messageInfo_Meaning.Size(m)
}
func (m *Meaning) XXX_DiscardUnknown() {
	xxx_messageInfo_Meaning.DiscardUnknown(m)
}

var xxx_messageInfo_Meaning proto.InternalMessageInfo

func (m *Meaning) GetMeaning() string {
	if m != nil && m.Meaning != nil {
		return *m.Meaning
	}
	return ""
}

func (m *Meaning) GetType() Meaning_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Meaning_PRIMARY
}

type Reading struct {
	Reading *string `protobuf:"bytes,1,opt,name=reading" json:"reading,omitempty"`
	// Non-primary readings are not accepted for Kanji.
	// TODO: use the accepted_answer field instead.
	IsPrimary            *bool         `protobuf:"varint,2,opt,name=is_primary,json=isPrimary" json:"is_primary,omitempty"`
	Type                 *Reading_Type `protobuf:"varint,3,opt,name=type,enum=proto.Reading_Type" json:"type,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Reading) Reset()         { *m = Reading{} }
func (m *Reading) String() string { return proto.CompactTextString(m) }
func (*Reading) ProtoMessage()    {}
func (*Reading) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{1}
}

func (m *Reading) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Reading.Unmarshal(m, b)
}
func (m *Reading) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Reading.Marshal(b, m, deterministic)
}
func (m *Reading) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Reading.Merge(m, src)
}
func (m *Reading) XXX_Size() int {
	return xxx_messageInfo_Reading.Size(m)
}
func (m *Reading) XXX_DiscardUnknown() {
	xxx_messageInfo_Reading.DiscardUnknown(m)
}

var xxx_messageInfo_Reading proto.InternalMessageInfo

func (m *Reading) GetReading() string {
	if m != nil && m.Reading != nil {
		return *m.Reading
	}
	return ""
}

func (m *Reading) GetIsPrimary() bool {
	if m != nil && m.IsPrimary != nil {
		return *m.IsPrimary
	}
	return false
}

func (m *Reading) GetType() Reading_Type {
	if m != nil && m.Type != nil {
		return *m.Type
	}
	return Reading_ONYOMI
}

type Radical struct {
	CharacterImage              *string          `protobuf:"bytes,1,opt,name=character_image,json=characterImage" json:"character_image,omitempty"`
	Mnemonic                    *string          `protobuf:"bytes,2,opt,name=mnemonic" json:"mnemonic,omitempty"`
	DeprecatedMnemonic          *string          `protobuf:"bytes,5,opt,name=deprecated_mnemonic,json=deprecatedMnemonic" json:"deprecated_mnemonic,omitempty"`
	HasCharacterImageFile       *bool            `protobuf:"varint,3,opt,name=has_character_image_file,json=hasCharacterImageFile" json:"has_character_image_file,omitempty"`
	FormattedMnemonic           []*FormattedText `protobuf:"bytes,4,rep,name=formatted_mnemonic,json=formattedMnemonic" json:"formatted_mnemonic,omitempty"`
	FormattedDeprecatedMnemonic []*FormattedText `protobuf:"bytes,6,rep,name=formatted_deprecated_mnemonic,json=formattedDeprecatedMnemonic" json:"formatted_deprecated_mnemonic,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}         `json:"-"`
	XXX_unrecognized            []byte           `json:"-"`
	XXX_sizecache               int32            `json:"-"`
}

func (m *Radical) Reset()         { *m = Radical{} }
func (m *Radical) String() string { return proto.CompactTextString(m) }
func (*Radical) ProtoMessage()    {}
func (*Radical) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{2}
}

func (m *Radical) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Radical.Unmarshal(m, b)
}
func (m *Radical) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Radical.Marshal(b, m, deterministic)
}
func (m *Radical) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Radical.Merge(m, src)
}
func (m *Radical) XXX_Size() int {
	return xxx_messageInfo_Radical.Size(m)
}
func (m *Radical) XXX_DiscardUnknown() {
	xxx_messageInfo_Radical.DiscardUnknown(m)
}

var xxx_messageInfo_Radical proto.InternalMessageInfo

func (m *Radical) GetCharacterImage() string {
	if m != nil && m.CharacterImage != nil {
		return *m.CharacterImage
	}
	return ""
}

func (m *Radical) GetMnemonic() string {
	if m != nil && m.Mnemonic != nil {
		return *m.Mnemonic
	}
	return ""
}

func (m *Radical) GetDeprecatedMnemonic() string {
	if m != nil && m.DeprecatedMnemonic != nil {
		return *m.DeprecatedMnemonic
	}
	return ""
}

func (m *Radical) GetHasCharacterImageFile() bool {
	if m != nil && m.HasCharacterImageFile != nil {
		return *m.HasCharacterImageFile
	}
	return false
}

func (m *Radical) GetFormattedMnemonic() []*FormattedText {
	if m != nil {
		return m.FormattedMnemonic
	}
	return nil
}

func (m *Radical) GetFormattedDeprecatedMnemonic() []*FormattedText {
	if m != nil {
		return m.FormattedDeprecatedMnemonic
	}
	return nil
}

type VisuallySimilarKanji struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Score                *int32   `protobuf:"varint,2,opt,name=score" json:"score,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *VisuallySimilarKanji) Reset()         { *m = VisuallySimilarKanji{} }
func (m *VisuallySimilarKanji) String() string { return proto.CompactTextString(m) }
func (*VisuallySimilarKanji) ProtoMessage()    {}
func (*VisuallySimilarKanji) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{3}
}

func (m *VisuallySimilarKanji) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_VisuallySimilarKanji.Unmarshal(m, b)
}
func (m *VisuallySimilarKanji) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_VisuallySimilarKanji.Marshal(b, m, deterministic)
}
func (m *VisuallySimilarKanji) XXX_Merge(src proto.Message) {
	xxx_messageInfo_VisuallySimilarKanji.Merge(m, src)
}
func (m *VisuallySimilarKanji) XXX_Size() int {
	return xxx_messageInfo_VisuallySimilarKanji.Size(m)
}
func (m *VisuallySimilarKanji) XXX_DiscardUnknown() {
	xxx_messageInfo_VisuallySimilarKanji.DiscardUnknown(m)
}

var xxx_messageInfo_VisuallySimilarKanji proto.InternalMessageInfo

func (m *VisuallySimilarKanji) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *VisuallySimilarKanji) GetScore() int32 {
	if m != nil && m.Score != nil {
		return *m.Score
	}
	return 0
}

type Kanji struct {
	MeaningMnemonic          *string                 `protobuf:"bytes,1,opt,name=meaning_mnemonic,json=meaningMnemonic" json:"meaning_mnemonic,omitempty"`
	MeaningHint              *string                 `protobuf:"bytes,2,opt,name=meaning_hint,json=meaningHint" json:"meaning_hint,omitempty"`
	ReadingMnemonic          *string                 `protobuf:"bytes,3,opt,name=reading_mnemonic,json=readingMnemonic" json:"reading_mnemonic,omitempty"`
	ReadingHint              *string                 `protobuf:"bytes,4,opt,name=reading_hint,json=readingHint" json:"reading_hint,omitempty"`
	FormattedMeaningMnemonic []*FormattedText        `protobuf:"bytes,5,rep,name=formatted_meaning_mnemonic,json=formattedMeaningMnemonic" json:"formatted_meaning_mnemonic,omitempty"`
	FormattedMeaningHint     []*FormattedText        `protobuf:"bytes,6,rep,name=formatted_meaning_hint,json=formattedMeaningHint" json:"formatted_meaning_hint,omitempty"`
	FormattedReadingMnemonic []*FormattedText        `protobuf:"bytes,7,rep,name=formatted_reading_mnemonic,json=formattedReadingMnemonic" json:"formatted_reading_mnemonic,omitempty"`
	FormattedReadingHint     []*FormattedText        `protobuf:"bytes,8,rep,name=formatted_reading_hint,json=formattedReadingHint" json:"formatted_reading_hint,omitempty"`
	VisuallySimilarKanji     []*VisuallySimilarKanji `protobuf:"bytes,9,rep,name=visually_similar_kanji,json=visuallySimilarKanji" json:"visually_similar_kanji,omitempty"`
	XXX_NoUnkeyedLiteral     struct{}                `json:"-"`
	XXX_unrecognized         []byte                  `json:"-"`
	XXX_sizecache            int32                   `json:"-"`
}

func (m *Kanji) Reset()         { *m = Kanji{} }
func (m *Kanji) String() string { return proto.CompactTextString(m) }
func (*Kanji) ProtoMessage()    {}
func (*Kanji) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{4}
}

func (m *Kanji) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Kanji.Unmarshal(m, b)
}
func (m *Kanji) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Kanji.Marshal(b, m, deterministic)
}
func (m *Kanji) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Kanji.Merge(m, src)
}
func (m *Kanji) XXX_Size() int {
	return xxx_messageInfo_Kanji.Size(m)
}
func (m *Kanji) XXX_DiscardUnknown() {
	xxx_messageInfo_Kanji.DiscardUnknown(m)
}

var xxx_messageInfo_Kanji proto.InternalMessageInfo

func (m *Kanji) GetMeaningMnemonic() string {
	if m != nil && m.MeaningMnemonic != nil {
		return *m.MeaningMnemonic
	}
	return ""
}

func (m *Kanji) GetMeaningHint() string {
	if m != nil && m.MeaningHint != nil {
		return *m.MeaningHint
	}
	return ""
}

func (m *Kanji) GetReadingMnemonic() string {
	if m != nil && m.ReadingMnemonic != nil {
		return *m.ReadingMnemonic
	}
	return ""
}

func (m *Kanji) GetReadingHint() string {
	if m != nil && m.ReadingHint != nil {
		return *m.ReadingHint
	}
	return ""
}

func (m *Kanji) GetFormattedMeaningMnemonic() []*FormattedText {
	if m != nil {
		return m.FormattedMeaningMnemonic
	}
	return nil
}

func (m *Kanji) GetFormattedMeaningHint() []*FormattedText {
	if m != nil {
		return m.FormattedMeaningHint
	}
	return nil
}

func (m *Kanji) GetFormattedReadingMnemonic() []*FormattedText {
	if m != nil {
		return m.FormattedReadingMnemonic
	}
	return nil
}

func (m *Kanji) GetFormattedReadingHint() []*FormattedText {
	if m != nil {
		return m.FormattedReadingHint
	}
	return nil
}

func (m *Kanji) GetVisuallySimilarKanji() []*VisuallySimilarKanji {
	if m != nil {
		return m.VisuallySimilarKanji
	}
	return nil
}

type Vocabulary struct {
	MeaningExplanation          *string                   `protobuf:"bytes,1,opt,name=meaning_explanation,json=meaningExplanation" json:"meaning_explanation,omitempty"`
	ReadingExplanation          *string                   `protobuf:"bytes,2,opt,name=reading_explanation,json=readingExplanation" json:"reading_explanation,omitempty"`
	FormattedMeaningExplanation []*FormattedText          `protobuf:"bytes,6,rep,name=formatted_meaning_explanation,json=formattedMeaningExplanation" json:"formatted_meaning_explanation,omitempty"`
	FormattedReadingExplanation []*FormattedText          `protobuf:"bytes,7,rep,name=formatted_reading_explanation,json=formattedReadingExplanation" json:"formatted_reading_explanation,omitempty"`
	Sentences                   []*Vocabulary_Sentence    `protobuf:"bytes,3,rep,name=sentences" json:"sentences,omitempty"`
	PartsOfSpeech               []Vocabulary_PartOfSpeech `protobuf:"varint,4,rep,name=parts_of_speech,json=partsOfSpeech,enum=proto.Vocabulary_PartOfSpeech" json:"parts_of_speech,omitempty"`
	AudioIds                    []int32                   `protobuf:"varint,5,rep,name=audio_ids,json=audioIds" json:"audio_ids,omitempty"`
	XXX_NoUnkeyedLiteral        struct{}                  `json:"-"`
	XXX_unrecognized            []byte                    `json:"-"`
	XXX_sizecache               int32                     `json:"-"`
}

func (m *Vocabulary) Reset()         { *m = Vocabulary{} }
func (m *Vocabulary) String() string { return proto.CompactTextString(m) }
func (*Vocabulary) ProtoMessage()    {}
func (*Vocabulary) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{5}
}

func (m *Vocabulary) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vocabulary.Unmarshal(m, b)
}
func (m *Vocabulary) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vocabulary.Marshal(b, m, deterministic)
}
func (m *Vocabulary) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vocabulary.Merge(m, src)
}
func (m *Vocabulary) XXX_Size() int {
	return xxx_messageInfo_Vocabulary.Size(m)
}
func (m *Vocabulary) XXX_DiscardUnknown() {
	xxx_messageInfo_Vocabulary.DiscardUnknown(m)
}

var xxx_messageInfo_Vocabulary proto.InternalMessageInfo

func (m *Vocabulary) GetMeaningExplanation() string {
	if m != nil && m.MeaningExplanation != nil {
		return *m.MeaningExplanation
	}
	return ""
}

func (m *Vocabulary) GetReadingExplanation() string {
	if m != nil && m.ReadingExplanation != nil {
		return *m.ReadingExplanation
	}
	return ""
}

func (m *Vocabulary) GetFormattedMeaningExplanation() []*FormattedText {
	if m != nil {
		return m.FormattedMeaningExplanation
	}
	return nil
}

func (m *Vocabulary) GetFormattedReadingExplanation() []*FormattedText {
	if m != nil {
		return m.FormattedReadingExplanation
	}
	return nil
}

func (m *Vocabulary) GetSentences() []*Vocabulary_Sentence {
	if m != nil {
		return m.Sentences
	}
	return nil
}

func (m *Vocabulary) GetPartsOfSpeech() []Vocabulary_PartOfSpeech {
	if m != nil {
		return m.PartsOfSpeech
	}
	return nil
}

func (m *Vocabulary) GetAudioIds() []int32 {
	if m != nil {
		return m.AudioIds
	}
	return nil
}

type Vocabulary_Sentence struct {
	Japanese             *string  `protobuf:"bytes,1,opt,name=japanese" json:"japanese,omitempty"`
	English              *string  `protobuf:"bytes,2,opt,name=english" json:"english,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Vocabulary_Sentence) Reset()         { *m = Vocabulary_Sentence{} }
func (m *Vocabulary_Sentence) String() string { return proto.CompactTextString(m) }
func (*Vocabulary_Sentence) ProtoMessage()    {}
func (*Vocabulary_Sentence) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{5, 0}
}

func (m *Vocabulary_Sentence) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Vocabulary_Sentence.Unmarshal(m, b)
}
func (m *Vocabulary_Sentence) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Vocabulary_Sentence.Marshal(b, m, deterministic)
}
func (m *Vocabulary_Sentence) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Vocabulary_Sentence.Merge(m, src)
}
func (m *Vocabulary_Sentence) XXX_Size() int {
	return xxx_messageInfo_Vocabulary_Sentence.Size(m)
}
func (m *Vocabulary_Sentence) XXX_DiscardUnknown() {
	xxx_messageInfo_Vocabulary_Sentence.DiscardUnknown(m)
}

var xxx_messageInfo_Vocabulary_Sentence proto.InternalMessageInfo

func (m *Vocabulary_Sentence) GetJapanese() string {
	if m != nil && m.Japanese != nil {
		return *m.Japanese
	}
	return ""
}

func (m *Vocabulary_Sentence) GetEnglish() string {
	if m != nil && m.English != nil {
		return *m.English
	}
	return ""
}

type Subject struct {
	Id                     *int32      `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level                  *int32      `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	Slug                   *string     `protobuf:"bytes,3,opt,name=slug" json:"slug,omitempty"`
	DocumentUrl            *string     `protobuf:"bytes,4,opt,name=document_url,json=documentUrl" json:"document_url,omitempty"`
	Japanese               *string     `protobuf:"bytes,5,opt,name=japanese" json:"japanese,omitempty"`
	Readings               []*Reading  `protobuf:"bytes,6,rep,name=readings" json:"readings,omitempty"`
	Meanings               []*Meaning  `protobuf:"bytes,7,rep,name=meanings" json:"meanings,omitempty"`
	ComponentSubjectIds    []int32     `protobuf:"varint,8,rep,name=component_subject_ids,json=componentSubjectIds" json:"component_subject_ids,omitempty"`
	AmalgamationSubjectIds []int32     `protobuf:"varint,12,rep,name=amalgamation_subject_ids,json=amalgamationSubjectIds" json:"amalgamation_subject_ids,omitempty"`
	Radical                *Radical    `protobuf:"bytes,9,opt,name=radical" json:"radical,omitempty"`
	Kanji                  *Kanji      `protobuf:"bytes,10,opt,name=kanji" json:"kanji,omitempty"`
	Vocabulary             *Vocabulary `protobuf:"bytes,11,opt,name=vocabulary" json:"vocabulary,omitempty"`
	XXX_NoUnkeyedLiteral   struct{}    `json:"-"`
	XXX_unrecognized       []byte      `json:"-"`
	XXX_sizecache          int32       `json:"-"`
}

func (m *Subject) Reset()         { *m = Subject{} }
func (m *Subject) String() string { return proto.CompactTextString(m) }
func (*Subject) ProtoMessage()    {}
func (*Subject) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{6}
}

func (m *Subject) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Subject.Unmarshal(m, b)
}
func (m *Subject) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Subject.Marshal(b, m, deterministic)
}
func (m *Subject) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Subject.Merge(m, src)
}
func (m *Subject) XXX_Size() int {
	return xxx_messageInfo_Subject.Size(m)
}
func (m *Subject) XXX_DiscardUnknown() {
	xxx_messageInfo_Subject.DiscardUnknown(m)
}

var xxx_messageInfo_Subject proto.InternalMessageInfo

func (m *Subject) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Subject) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Subject) GetSlug() string {
	if m != nil && m.Slug != nil {
		return *m.Slug
	}
	return ""
}

func (m *Subject) GetDocumentUrl() string {
	if m != nil && m.DocumentUrl != nil {
		return *m.DocumentUrl
	}
	return ""
}

func (m *Subject) GetJapanese() string {
	if m != nil && m.Japanese != nil {
		return *m.Japanese
	}
	return ""
}

func (m *Subject) GetReadings() []*Reading {
	if m != nil {
		return m.Readings
	}
	return nil
}

func (m *Subject) GetMeanings() []*Meaning {
	if m != nil {
		return m.Meanings
	}
	return nil
}

func (m *Subject) GetComponentSubjectIds() []int32 {
	if m != nil {
		return m.ComponentSubjectIds
	}
	return nil
}

func (m *Subject) GetAmalgamationSubjectIds() []int32 {
	if m != nil {
		return m.AmalgamationSubjectIds
	}
	return nil
}

func (m *Subject) GetRadical() *Radical {
	if m != nil {
		return m.Radical
	}
	return nil
}

func (m *Subject) GetKanji() *Kanji {
	if m != nil {
		return m.Kanji
	}
	return nil
}

func (m *Subject) GetVocabulary() *Vocabulary {
	if m != nil {
		return m.Vocabulary
	}
	return nil
}

type Assignment struct {
	Id                   *int32        `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level                *int32        `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	SubjectId            *int32        `protobuf:"varint,3,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	SubjectType          *Subject_Type `protobuf:"varint,4,opt,name=subject_type,json=subjectType,enum=proto.Subject_Type" json:"subject_type,omitempty"`
	AvailableAt          *int32        `protobuf:"varint,5,opt,name=available_at,json=availableAt" json:"available_at,omitempty"`
	StartedAt            *int32        `protobuf:"varint,6,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	SrsStage             *int32        `protobuf:"varint,7,opt,name=srs_stage,json=srsStage" json:"srs_stage,omitempty"`
	PassedAt             *int32        `protobuf:"varint,8,opt,name=passed_at,json=passedAt" json:"passed_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *Assignment) Reset()         { *m = Assignment{} }
func (m *Assignment) String() string { return proto.CompactTextString(m) }
func (*Assignment) ProtoMessage()    {}
func (*Assignment) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{7}
}

func (m *Assignment) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Assignment.Unmarshal(m, b)
}
func (m *Assignment) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Assignment.Marshal(b, m, deterministic)
}
func (m *Assignment) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Assignment.Merge(m, src)
}
func (m *Assignment) XXX_Size() int {
	return xxx_messageInfo_Assignment.Size(m)
}
func (m *Assignment) XXX_DiscardUnknown() {
	xxx_messageInfo_Assignment.DiscardUnknown(m)
}

var xxx_messageInfo_Assignment proto.InternalMessageInfo

func (m *Assignment) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Assignment) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Assignment) GetSubjectId() int32 {
	if m != nil && m.SubjectId != nil {
		return *m.SubjectId
	}
	return 0
}

func (m *Assignment) GetSubjectType() Subject_Type {
	if m != nil && m.SubjectType != nil {
		return *m.SubjectType
	}
	return Subject_RADICAL
}

func (m *Assignment) GetAvailableAt() int32 {
	if m != nil && m.AvailableAt != nil {
		return *m.AvailableAt
	}
	return 0
}

func (m *Assignment) GetStartedAt() int32 {
	if m != nil && m.StartedAt != nil {
		return *m.StartedAt
	}
	return 0
}

func (m *Assignment) GetSrsStage() int32 {
	if m != nil && m.SrsStage != nil {
		return *m.SrsStage
	}
	return 0
}

func (m *Assignment) GetPassedAt() int32 {
	if m != nil && m.PassedAt != nil {
		return *m.PassedAt
	}
	return 0
}

type Progress struct {
	MeaningWrong         *bool       `protobuf:"varint,3,opt,name=meaning_wrong,json=meaningWrong" json:"meaning_wrong,omitempty"`
	ReadingWrong         *bool       `protobuf:"varint,4,opt,name=reading_wrong,json=readingWrong" json:"reading_wrong,omitempty"`
	IsLesson             *bool       `protobuf:"varint,5,opt,name=is_lesson,json=isLesson" json:"is_lesson,omitempty"`
	Assignment           *Assignment `protobuf:"bytes,6,opt,name=assignment" json:"assignment,omitempty"`
	CreatedAt            *int32      `protobuf:"varint,7,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{}    `json:"-"`
	XXX_unrecognized     []byte      `json:"-"`
	XXX_sizecache        int32       `json:"-"`
}

func (m *Progress) Reset()         { *m = Progress{} }
func (m *Progress) String() string { return proto.CompactTextString(m) }
func (*Progress) ProtoMessage()    {}
func (*Progress) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{8}
}

func (m *Progress) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Progress.Unmarshal(m, b)
}
func (m *Progress) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Progress.Marshal(b, m, deterministic)
}
func (m *Progress) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Progress.Merge(m, src)
}
func (m *Progress) XXX_Size() int {
	return xxx_messageInfo_Progress.Size(m)
}
func (m *Progress) XXX_DiscardUnknown() {
	xxx_messageInfo_Progress.DiscardUnknown(m)
}

var xxx_messageInfo_Progress proto.InternalMessageInfo

func (m *Progress) GetMeaningWrong() bool {
	if m != nil && m.MeaningWrong != nil {
		return *m.MeaningWrong
	}
	return false
}

func (m *Progress) GetReadingWrong() bool {
	if m != nil && m.ReadingWrong != nil {
		return *m.ReadingWrong
	}
	return false
}

func (m *Progress) GetIsLesson() bool {
	if m != nil && m.IsLesson != nil {
		return *m.IsLesson
	}
	return false
}

func (m *Progress) GetAssignment() *Assignment {
	if m != nil {
		return m.Assignment
	}
	return nil
}

func (m *Progress) GetCreatedAt() int32 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

type StudyMaterials struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	SubjectId            *int32   `protobuf:"varint,2,opt,name=subject_id,json=subjectId" json:"subject_id,omitempty"`
	SubjectType          *string  `protobuf:"bytes,6,opt,name=subject_type,json=subjectType" json:"subject_type,omitempty"`
	MeaningNote          *string  `protobuf:"bytes,3,opt,name=meaning_note,json=meaningNote" json:"meaning_note,omitempty"`
	ReadingNote          *string  `protobuf:"bytes,4,opt,name=reading_note,json=readingNote" json:"reading_note,omitempty"`
	MeaningSynonyms      []string `protobuf:"bytes,5,rep,name=meaning_synonyms,json=meaningSynonyms" json:"meaning_synonyms,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StudyMaterials) Reset()         { *m = StudyMaterials{} }
func (m *StudyMaterials) String() string { return proto.CompactTextString(m) }
func (*StudyMaterials) ProtoMessage()    {}
func (*StudyMaterials) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{9}
}

func (m *StudyMaterials) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StudyMaterials.Unmarshal(m, b)
}
func (m *StudyMaterials) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StudyMaterials.Marshal(b, m, deterministic)
}
func (m *StudyMaterials) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StudyMaterials.Merge(m, src)
}
func (m *StudyMaterials) XXX_Size() int {
	return xxx_messageInfo_StudyMaterials.Size(m)
}
func (m *StudyMaterials) XXX_DiscardUnknown() {
	xxx_messageInfo_StudyMaterials.DiscardUnknown(m)
}

var xxx_messageInfo_StudyMaterials proto.InternalMessageInfo

func (m *StudyMaterials) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *StudyMaterials) GetSubjectId() int32 {
	if m != nil && m.SubjectId != nil {
		return *m.SubjectId
	}
	return 0
}

func (m *StudyMaterials) GetSubjectType() string {
	if m != nil && m.SubjectType != nil {
		return *m.SubjectType
	}
	return ""
}

func (m *StudyMaterials) GetMeaningNote() string {
	if m != nil && m.MeaningNote != nil {
		return *m.MeaningNote
	}
	return ""
}

func (m *StudyMaterials) GetReadingNote() string {
	if m != nil && m.ReadingNote != nil {
		return *m.ReadingNote
	}
	return ""
}

func (m *StudyMaterials) GetMeaningSynonyms() []string {
	if m != nil {
		return m.MeaningSynonyms
	}
	return nil
}

type User struct {
	Username                      *string  `protobuf:"bytes,1,opt,name=username" json:"username,omitempty"`
	Level                         *int32   `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	MaxLevelGrantedBySubscription *int32   `protobuf:"varint,3,opt,name=max_level_granted_by_subscription,json=maxLevelGrantedBySubscription" json:"max_level_granted_by_subscription,omitempty"`
	ProfileUrl                    *string  `protobuf:"bytes,4,opt,name=profile_url,json=profileUrl" json:"profile_url,omitempty"`
	StartedAt                     *int32   `protobuf:"varint,5,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	Subscribed                    *bool    `protobuf:"varint,6,opt,name=subscribed" json:"subscribed,omitempty"`
	SubscriptionEndsAt            *int32   `protobuf:"varint,7,opt,name=subscription_ends_at,json=subscriptionEndsAt" json:"subscription_ends_at,omitempty"`
	VacationStartedAt             *int32   `protobuf:"varint,8,opt,name=vacation_started_at,json=vacationStartedAt" json:"vacation_started_at,omitempty"`
	XXX_NoUnkeyedLiteral          struct{} `json:"-"`
	XXX_unrecognized              []byte   `json:"-"`
	XXX_sizecache                 int32    `json:"-"`
}

func (m *User) Reset()         { *m = User{} }
func (m *User) String() string { return proto.CompactTextString(m) }
func (*User) ProtoMessage()    {}
func (*User) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{10}
}

func (m *User) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_User.Unmarshal(m, b)
}
func (m *User) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_User.Marshal(b, m, deterministic)
}
func (m *User) XXX_Merge(src proto.Message) {
	xxx_messageInfo_User.Merge(m, src)
}
func (m *User) XXX_Size() int {
	return xxx_messageInfo_User.Size(m)
}
func (m *User) XXX_DiscardUnknown() {
	xxx_messageInfo_User.DiscardUnknown(m)
}

var xxx_messageInfo_User proto.InternalMessageInfo

func (m *User) GetUsername() string {
	if m != nil && m.Username != nil {
		return *m.Username
	}
	return ""
}

func (m *User) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *User) GetMaxLevelGrantedBySubscription() int32 {
	if m != nil && m.MaxLevelGrantedBySubscription != nil {
		return *m.MaxLevelGrantedBySubscription
	}
	return 0
}

func (m *User) GetProfileUrl() string {
	if m != nil && m.ProfileUrl != nil {
		return *m.ProfileUrl
	}
	return ""
}

func (m *User) GetStartedAt() int32 {
	if m != nil && m.StartedAt != nil {
		return *m.StartedAt
	}
	return 0
}

func (m *User) GetSubscribed() bool {
	if m != nil && m.Subscribed != nil {
		return *m.Subscribed
	}
	return false
}

func (m *User) GetSubscriptionEndsAt() int32 {
	if m != nil && m.SubscriptionEndsAt != nil {
		return *m.SubscriptionEndsAt
	}
	return 0
}

func (m *User) GetVacationStartedAt() int32 {
	if m != nil && m.VacationStartedAt != nil {
		return *m.VacationStartedAt
	}
	return 0
}

type SubjectOverrides struct {
	Subject              []*Subject `protobuf:"bytes,1,rep,name=subject" json:"subject,omitempty"`
	XXX_NoUnkeyedLiteral struct{}   `json:"-"`
	XXX_unrecognized     []byte     `json:"-"`
	XXX_sizecache        int32      `json:"-"`
}

func (m *SubjectOverrides) Reset()         { *m = SubjectOverrides{} }
func (m *SubjectOverrides) String() string { return proto.CompactTextString(m) }
func (*SubjectOverrides) ProtoMessage()    {}
func (*SubjectOverrides) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{11}
}

func (m *SubjectOverrides) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectOverrides.Unmarshal(m, b)
}
func (m *SubjectOverrides) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectOverrides.Marshal(b, m, deterministic)
}
func (m *SubjectOverrides) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectOverrides.Merge(m, src)
}
func (m *SubjectOverrides) XXX_Size() int {
	return xxx_messageInfo_SubjectOverrides.Size(m)
}
func (m *SubjectOverrides) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectOverrides.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectOverrides proto.InternalMessageInfo

func (m *SubjectOverrides) GetSubject() []*Subject {
	if m != nil {
		return m.Subject
	}
	return nil
}

type FormattedText struct {
	Format               []FormattedText_Format `protobuf:"varint,1,rep,name=format,enum=proto.FormattedText_Format" json:"format,omitempty"`
	Text                 *string                `protobuf:"bytes,2,opt,name=text" json:"text,omitempty"`
	LinkUrl              *string                `protobuf:"bytes,3,opt,name=link_url,json=linkUrl" json:"link_url,omitempty"`
	XXX_NoUnkeyedLiteral struct{}               `json:"-"`
	XXX_unrecognized     []byte                 `json:"-"`
	XXX_sizecache        int32                  `json:"-"`
}

func (m *FormattedText) Reset()         { *m = FormattedText{} }
func (m *FormattedText) String() string { return proto.CompactTextString(m) }
func (*FormattedText) ProtoMessage()    {}
func (*FormattedText) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{12}
}

func (m *FormattedText) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_FormattedText.Unmarshal(m, b)
}
func (m *FormattedText) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_FormattedText.Marshal(b, m, deterministic)
}
func (m *FormattedText) XXX_Merge(src proto.Message) {
	xxx_messageInfo_FormattedText.Merge(m, src)
}
func (m *FormattedText) XXX_Size() int {
	return xxx_messageInfo_FormattedText.Size(m)
}
func (m *FormattedText) XXX_DiscardUnknown() {
	xxx_messageInfo_FormattedText.DiscardUnknown(m)
}

var xxx_messageInfo_FormattedText proto.InternalMessageInfo

func (m *FormattedText) GetFormat() []FormattedText_Format {
	if m != nil {
		return m.Format
	}
	return nil
}

func (m *FormattedText) GetText() string {
	if m != nil && m.Text != nil {
		return *m.Text
	}
	return ""
}

func (m *FormattedText) GetLinkUrl() string {
	if m != nil && m.LinkUrl != nil {
		return *m.LinkUrl
	}
	return ""
}

type DataFileHeader struct {
	SubjectsByLevel []*SubjectsByLevel `protobuf:"bytes,1,rep,name=subjects_by_level,json=subjectsByLevel" json:"subjects_by_level,omitempty"`
	// The level of each subject.
	LevelBySubject []int32 `protobuf:"varint,4,rep,name=level_by_subject,json=levelBySubject" json:"level_by_subject,omitempty"`
	// Subject IDs that no longer have any data.  The client should ignore any
	// assignments with these subjects.
	DeletedSubjectIds []int32 `protobuf:"varint,3,rep,name=deleted_subject_ids,json=deletedSubjectIds" json:"deleted_subject_ids,omitempty"`
	// Offset of each encoded Subject message, starting from the end of this
	// header in the file.
	SubjectByteOffset    []uint32 `protobuf:"varint,2,rep,name=subject_byte_offset,json=subjectByteOffset" json:"subject_byte_offset,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *DataFileHeader) Reset()         { *m = DataFileHeader{} }
func (m *DataFileHeader) String() string { return proto.CompactTextString(m) }
func (*DataFileHeader) ProtoMessage()    {}
func (*DataFileHeader) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{13}
}

func (m *DataFileHeader) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_DataFileHeader.Unmarshal(m, b)
}
func (m *DataFileHeader) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_DataFileHeader.Marshal(b, m, deterministic)
}
func (m *DataFileHeader) XXX_Merge(src proto.Message) {
	xxx_messageInfo_DataFileHeader.Merge(m, src)
}
func (m *DataFileHeader) XXX_Size() int {
	return xxx_messageInfo_DataFileHeader.Size(m)
}
func (m *DataFileHeader) XXX_DiscardUnknown() {
	xxx_messageInfo_DataFileHeader.DiscardUnknown(m)
}

var xxx_messageInfo_DataFileHeader proto.InternalMessageInfo

func (m *DataFileHeader) GetSubjectsByLevel() []*SubjectsByLevel {
	if m != nil {
		return m.SubjectsByLevel
	}
	return nil
}

func (m *DataFileHeader) GetLevelBySubject() []int32 {
	if m != nil {
		return m.LevelBySubject
	}
	return nil
}

func (m *DataFileHeader) GetDeletedSubjectIds() []int32 {
	if m != nil {
		return m.DeletedSubjectIds
	}
	return nil
}

func (m *DataFileHeader) GetSubjectByteOffset() []uint32 {
	if m != nil {
		return m.SubjectByteOffset
	}
	return nil
}

type SubjectsByLevel struct {
	Radicals             []int32  `protobuf:"varint,1,rep,name=radicals" json:"radicals,omitempty"`
	Kanji                []int32  `protobuf:"varint,2,rep,name=kanji" json:"kanji,omitempty"`
	Vocabulary           []int32  `protobuf:"varint,3,rep,name=vocabulary" json:"vocabulary,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SubjectsByLevel) Reset()         { *m = SubjectsByLevel{} }
func (m *SubjectsByLevel) String() string { return proto.CompactTextString(m) }
func (*SubjectsByLevel) ProtoMessage()    {}
func (*SubjectsByLevel) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{14}
}

func (m *SubjectsByLevel) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_SubjectsByLevel.Unmarshal(m, b)
}
func (m *SubjectsByLevel) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_SubjectsByLevel.Marshal(b, m, deterministic)
}
func (m *SubjectsByLevel) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SubjectsByLevel.Merge(m, src)
}
func (m *SubjectsByLevel) XXX_Size() int {
	return xxx_messageInfo_SubjectsByLevel.Size(m)
}
func (m *SubjectsByLevel) XXX_DiscardUnknown() {
	xxx_messageInfo_SubjectsByLevel.DiscardUnknown(m)
}

var xxx_messageInfo_SubjectsByLevel proto.InternalMessageInfo

func (m *SubjectsByLevel) GetRadicals() []int32 {
	if m != nil {
		return m.Radicals
	}
	return nil
}

func (m *SubjectsByLevel) GetKanji() []int32 {
	if m != nil {
		return m.Kanji
	}
	return nil
}

func (m *SubjectsByLevel) GetVocabulary() []int32 {
	if m != nil {
		return m.Vocabulary
	}
	return nil
}

type Level struct {
	Id                   *int32   `protobuf:"varint,1,opt,name=id" json:"id,omitempty"`
	Level                *int32   `protobuf:"varint,2,opt,name=level" json:"level,omitempty"`
	AbandonedAt          *int32   `protobuf:"varint,3,opt,name=abandoned_at,json=abandonedAt" json:"abandoned_at,omitempty"`
	CompletedAt          *int32   `protobuf:"varint,4,opt,name=completed_at,json=completedAt" json:"completed_at,omitempty"`
	CreatedAt            *int32   `protobuf:"varint,5,opt,name=created_at,json=createdAt" json:"created_at,omitempty"`
	PassedAt             *int32   `protobuf:"varint,6,opt,name=passed_at,json=passedAt" json:"passed_at,omitempty"`
	StartedAt            *int32   `protobuf:"varint,7,opt,name=started_at,json=startedAt" json:"started_at,omitempty"`
	UnlockedAt           *int32   `protobuf:"varint,8,opt,name=unlocked_at,json=unlockedAt" json:"unlocked_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *Level) Reset()         { *m = Level{} }
func (m *Level) String() string { return proto.CompactTextString(m) }
func (*Level) ProtoMessage()    {}
func (*Level) Descriptor() ([]byte, []int) {
	return fileDescriptor_0b79f441dcbe3909, []int{15}
}

func (m *Level) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_Level.Unmarshal(m, b)
}
func (m *Level) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_Level.Marshal(b, m, deterministic)
}
func (m *Level) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Level.Merge(m, src)
}
func (m *Level) XXX_Size() int {
	return xxx_messageInfo_Level.Size(m)
}
func (m *Level) XXX_DiscardUnknown() {
	xxx_messageInfo_Level.DiscardUnknown(m)
}

var xxx_messageInfo_Level proto.InternalMessageInfo

func (m *Level) GetId() int32 {
	if m != nil && m.Id != nil {
		return *m.Id
	}
	return 0
}

func (m *Level) GetLevel() int32 {
	if m != nil && m.Level != nil {
		return *m.Level
	}
	return 0
}

func (m *Level) GetAbandonedAt() int32 {
	if m != nil && m.AbandonedAt != nil {
		return *m.AbandonedAt
	}
	return 0
}

func (m *Level) GetCompletedAt() int32 {
	if m != nil && m.CompletedAt != nil {
		return *m.CompletedAt
	}
	return 0
}

func (m *Level) GetCreatedAt() int32 {
	if m != nil && m.CreatedAt != nil {
		return *m.CreatedAt
	}
	return 0
}

func (m *Level) GetPassedAt() int32 {
	if m != nil && m.PassedAt != nil {
		return *m.PassedAt
	}
	return 0
}

func (m *Level) GetStartedAt() int32 {
	if m != nil && m.StartedAt != nil {
		return *m.StartedAt
	}
	return 0
}

func (m *Level) GetUnlockedAt() int32 {
	if m != nil && m.UnlockedAt != nil {
		return *m.UnlockedAt
	}
	return 0
}

func init() {
	proto.RegisterEnum("proto.Meaning_Type", Meaning_Type_name, Meaning_Type_value)
	proto.RegisterEnum("proto.Reading_Type", Reading_Type_name, Reading_Type_value)
	proto.RegisterEnum("proto.Vocabulary_PartOfSpeech", Vocabulary_PartOfSpeech_name, Vocabulary_PartOfSpeech_value)
	proto.RegisterEnum("proto.Subject_Type", Subject_Type_name, Subject_Type_value)
	proto.RegisterEnum("proto.FormattedText_Format", FormattedText_Format_name, FormattedText_Format_value)
	proto.RegisterType((*Meaning)(nil), "proto.Meaning")
	proto.RegisterType((*Reading)(nil), "proto.Reading")
	proto.RegisterType((*Radical)(nil), "proto.Radical")
	proto.RegisterType((*VisuallySimilarKanji)(nil), "proto.VisuallySimilarKanji")
	proto.RegisterType((*Kanji)(nil), "proto.Kanji")
	proto.RegisterType((*Vocabulary)(nil), "proto.Vocabulary")
	proto.RegisterType((*Vocabulary_Sentence)(nil), "proto.Vocabulary.Sentence")
	proto.RegisterType((*Subject)(nil), "proto.Subject")
	proto.RegisterType((*Assignment)(nil), "proto.Assignment")
	proto.RegisterType((*Progress)(nil), "proto.Progress")
	proto.RegisterType((*StudyMaterials)(nil), "proto.StudyMaterials")
	proto.RegisterType((*User)(nil), "proto.User")
	proto.RegisterType((*SubjectOverrides)(nil), "proto.SubjectOverrides")
	proto.RegisterType((*FormattedText)(nil), "proto.FormattedText")
	proto.RegisterType((*DataFileHeader)(nil), "proto.DataFileHeader")
	proto.RegisterType((*SubjectsByLevel)(nil), "proto.SubjectsByLevel")
	proto.RegisterType((*Level)(nil), "proto.Level")
}

func init() { proto.RegisterFile("wanikani.proto", fileDescriptor_0b79f441dcbe3909) }

var fileDescriptor_0b79f441dcbe3909 = []byte{
	// 1883 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x8c, 0x57, 0xcd, 0x72, 0xdb, 0xc8,
	0x11, 0x2e, 0xfe, 0x80, 0x04, 0x9b, 0x12, 0x05, 0x8d, 0x64, 0x87, 0xb1, 0xcb, 0x5e, 0x1b, 0x39,
	0xac, 0x92, 0x54, 0x69, 0x13, 0xa7, 0x2a, 0xd9, 0xc3, 0x1e, 0x02, 0x51, 0x94, 0x05, 0x89, 0x02,
	0x94, 0x21, 0xa9, 0xb5, 0x4f, 0xa8, 0x11, 0x31, 0xa2, 0x60, 0x81, 0x00, 0x0b, 0x03, 0x6a, 0xc5,
	0x07, 0xc8, 0x3b, 0xe4, 0x94, 0x43, 0x1e, 0x22, 0x4f, 0x90, 0x43, 0x4e, 0xc9, 0x21, 0x87, 0xdc,
	0x52, 0x79, 0x83, 0x9c, 0x73, 0xdb, 0x9a, 0x1f, 0x80, 0x00, 0x29, 0xbb, 0x74, 0x22, 0xba, 0xfb,
	0x9b, 0x9e, 0x9e, 0xfe, 0x27, 0x74, 0x7e, 0x20, 0x51, 0x70, 0x47, 0xa2, 0xe0, 0x70, 0x9e, 0xc4,
	0x69, 0x8c, 0x34, 0xf1, 0x63, 0xfe, 0xb9, 0x02, 0xcd, 0x0b, 0x4a, 0xa2, 0x20, 0x9a, 0xa2, 0x2e,
	0x34, 0x67, 0xf2, 0xb3, 0x5b, 0x79, 0x53, 0x39, 0x68, 0xe1, 0x8c, 0x44, 0x5f, 0x43, 0x3d, 0x5d,
	0xce, 0x69, 0xb7, 0xf6, 0xa6, 0x72, 0xd0, 0x79, 0xb7, 0x27, 0x55, 0x1c, 0xaa, 0x73, 0x87, 0xa3,
	0xe5, 0x9c, 0x62, 0x01, 0x30, 0xcf, 0xa0, 0xce, 0x29, 0xd4, 0x86, 0xe6, 0x25, 0xb6, 0x2f, 0x2c,
	0xfc, 0xd1, 0xa8, 0xa0, 0x6d, 0x68, 0x0d, 0xfb, 0x3d, 0xd7, 0x39, 0xe6, 0x64, 0x15, 0xfd, 0x04,
	0xf6, 0xac, 0xf1, 0x07, 0x7b, 0x60, 0x5b, 0xf8, 0xa3, 0xf7, 0xfd, 0xa9, 0x3d, 0xea, 0x0f, 0xec,
	0xe1, 0xc8, 0xa8, 0x71, 0xdc, 0xd1, 0xc0, 0xea, 0x9d, 0x0b, 0xb2, 0x7e, 0x56, 0xd7, 0xab, 0x46,
	0xcd, 0xfc, 0x53, 0x05, 0x9a, 0x98, 0x12, 0x5f, 0x19, 0x98, 0xc8, 0xcf, 0xcc, 0x40, 0x45, 0xa2,
	0x57, 0x00, 0x01, 0xf3, 0xe6, 0x49, 0x30, 0x23, 0xc9, 0xb2, 0x5b, 0x7d, 0x53, 0x39, 0xd0, 0x71,
	0x2b, 0x60, 0x97, 0x92, 0xf1, 0x19, 0xfb, 0x95, 0xda, 0xa2, 0xfd, 0xbf, 0x54, 0xf6, 0x03, 0x34,
	0x5c, 0xe7, 0xa3, 0x7b, 0x61, 0x1b, 0x15, 0xfe, 0x96, 0xf3, 0xb1, 0x24, 0xaa, 0x5c, 0xe0, 0x58,
	0x8e, 0x8b, 0x6d, 0xa3, 0x66, 0xfe, 0xbb, 0x0a, 0x4d, 0x4c, 0xfc, 0x60, 0x42, 0x42, 0xf4, 0x35,
	0xec, 0x4c, 0x6e, 0x49, 0x42, 0x26, 0x29, 0x4d, 0xbc, 0x60, 0x46, 0xa6, 0x54, 0x99, 0xd8, 0xc9,
	0xd9, 0x36, 0xe7, 0xa2, 0x17, 0xa0, 0xcf, 0x22, 0x3a, 0x8b, 0xa3, 0x60, 0x22, 0xec, 0x6c, 0xe1,
	0x9c, 0x46, 0xdf, 0xc0, 0x9e, 0x4f, 0xe7, 0x09, 0x9d, 0x90, 0x94, 0xfa, 0x5e, 0x0e, 0xd3, 0x04,
	0x0c, 0xad, 0x44, 0x17, 0xd9, 0x81, 0xdf, 0x41, 0xf7, 0x96, 0x30, 0x6f, 0xed, 0x66, 0xef, 0x26,
	0x08, 0xe5, 0x5b, 0x75, 0xfc, 0xec, 0x96, 0xb0, 0x5e, 0xc9, 0x82, 0x93, 0x20, 0xa4, 0xa8, 0x07,
	0xe8, 0x26, 0x4e, 0x66, 0x24, 0x2d, 0x5d, 0x54, 0x7f, 0x53, 0x3b, 0x68, 0xbf, 0xdb, 0x57, 0xee,
	0x39, 0xc9, 0x00, 0x23, 0xfa, 0x90, 0xe2, 0xdd, 0x1c, 0x9f, 0xdf, 0xfe, 0x01, 0x5e, 0xad, 0x94,
	0x3c, 0x66, 0x78, 0xe3, 0x0b, 0xfa, 0x5e, 0xe6, 0x47, 0x8f, 0x37, 0xde, 0x65, 0x7e, 0x07, 0xfb,
	0x57, 0x01, 0x5b, 0x90, 0x30, 0x5c, 0x0e, 0x83, 0x59, 0x10, 0x92, 0xe4, 0x9c, 0x44, 0x9f, 0x02,
	0xd4, 0x81, 0x6a, 0xe0, 0x0b, 0xc7, 0x6a, 0xb8, 0x1a, 0xf8, 0x68, 0x1f, 0x34, 0x36, 0x89, 0x13,
	0x2a, 0x3c, 0xa9, 0x61, 0x49, 0x98, 0x7f, 0xad, 0x83, 0x26, 0xf1, 0x3f, 0x07, 0x43, 0xa5, 0xf0,
	0xca, 0x28, 0x19, 0x96, 0x1d, 0xc5, 0xcf, 0x1f, 0xf3, 0x16, 0xb6, 0x32, 0xe8, 0x6d, 0x10, 0xa5,
	0x2a, 0x36, 0x6d, 0xc5, 0x3b, 0x0d, 0xa2, 0x94, 0x6b, 0x53, 0xf9, 0xb6, 0xd2, 0x56, 0x93, 0xda,
	0x14, 0xbf, 0xa8, 0x2d, 0x83, 0x0a, 0x6d, 0x75, 0xa9, 0x4d, 0xf1, 0x84, 0x36, 0x0c, 0x2f, 0x0a,
	0x21, 0x58, 0xb7, 0x52, 0xfb, 0x82, 0xeb, 0xba, 0xab, 0x50, 0xac, 0x3d, 0xe2, 0x0c, 0x9e, 0x6f,
	0xea, 0x14, 0x06, 0x7c, 0x29, 0x14, 0xfb, 0xeb, 0xfa, 0x36, 0xed, 0xdb, 0x78, 0x77, 0xf3, 0x49,
	0xf6, 0xe1, 0x35, 0xb7, 0x94, 0xec, 0x2b, 0x39, 0x48, 0x7f, 0x92, 0x7d, 0xb8, 0xe0, 0xbf, 0x3f,
	0xc0, 0xf3, 0x7b, 0x95, 0x23, 0x1e, 0x93, 0x49, 0xe2, 0xdd, 0xf1, 0xa8, 0x77, 0x5b, 0x42, 0xd7,
	0x4b, 0xa5, 0xeb, 0xb1, 0x44, 0xc2, 0xfb, 0xf7, 0x8f, 0x70, 0xcd, 0x7f, 0x34, 0x00, 0xae, 0xe2,
	0x09, 0xb9, 0x5e, 0x84, 0xbc, 0x6b, 0x7c, 0x03, 0x7b, 0x99, 0x0f, 0xe9, 0xc3, 0x3c, 0x24, 0x11,
	0x49, 0x83, 0x38, 0x52, 0x09, 0x84, 0x94, 0xa8, 0xbf, 0x92, 0xf0, 0x03, 0xd9, 0xa3, 0x8a, 0x07,
	0x64, 0x2a, 0x21, 0x25, 0x2a, 0x1e, 0x28, 0x55, 0xd0, 0x63, 0x77, 0x3d, 0xad, 0x82, 0x2e, 0x36,
	0x4d, 0x29, 0x69, 0x7e, 0xcc, 0xa8, 0xe6, 0x93, 0x34, 0xe3, 0x4d, 0x9b, 0xbf, 0x85, 0x16, 0xa3,
	0x51, 0x4a, 0xa3, 0x09, 0x65, 0xdd, 0x9a, 0xd0, 0xf2, 0x22, 0x73, 0x75, 0xee, 0xbb, 0xc3, 0xa1,
	0x82, 0xe0, 0x15, 0x18, 0x9d, 0xc0, 0xce, 0x9c, 0x24, 0x29, 0xf3, 0xe2, 0x1b, 0x8f, 0xcd, 0x29,
	0x9d, 0xdc, 0x8a, 0x8e, 0xd3, 0x79, 0xf7, 0x7a, 0xf3, 0xfc, 0x25, 0x49, 0x52, 0xf7, 0x66, 0x28,
	0x50, 0x78, 0x5b, 0x1c, 0xcb, 0x48, 0xf4, 0x12, 0x5a, 0x64, 0xe1, 0x07, 0xb1, 0x17, 0xf8, 0x4c,
	0x14, 0x8a, 0x86, 0x75, 0xc1, 0xb0, 0x7d, 0xf6, 0xe2, 0xf7, 0xa0, 0x67, 0x77, 0xf3, 0x5e, 0xfb,
	0x89, 0xcc, 0x49, 0x44, 0x59, 0xd6, 0x8d, 0x73, 0x9a, 0xcf, 0x12, 0x1a, 0x4d, 0xc3, 0x80, 0xdd,
	0xaa, 0xf8, 0x64, 0xa4, 0xf9, 0xf7, 0x2a, 0x6c, 0x15, 0xaf, 0x47, 0x3a, 0xd4, 0x1d, 0x77, 0xec,
	0xc8, 0x51, 0xe0, 0x8c, 0x2f, 0xfa, 0xd8, 0x1a, 0x18, 0x55, 0xf4, 0x0c, 0x76, 0x6d, 0x67, 0x84,
	0x2d, 0x67, 0x68, 0x8f, 0xec, 0xab, 0xbe, 0x77, 0xd5, 0xc7, 0x47, 0x46, 0x0d, 0x19, 0xb0, 0x65,
	0xf7, 0x4e, 0xed, 0x63, 0xcb, 0x91, 0x9c, 0x3a, 0xda, 0x83, 0x9d, 0x75, 0x98, 0xc6, 0x61, 0x8e,
	0xeb, 0x59, 0xc7, 0x67, 0xfd, 0x1e, 0x67, 0x1b, 0x0d, 0xd4, 0x01, 0x78, 0xef, 0xe6, 0xc7, 0x9a,
	0x02, 0x61, 0x15, 0x10, 0x3a, 0xda, 0x81, 0xb6, 0x5d, 0x60, 0xb4, 0xf8, 0x34, 0x1a, 0x8e, 0x4f,
	0x4e, 0xec, 0x0f, 0x06, 0xf0, 0x6f, 0xeb, 0x58, 0x1c, 0x6d, 0x8b, 0x89, 0x3b, 0xc6, 0x63, 0xa9,
	0x69, 0x8b, 0x8b, 0x2e, 0x71, 0x9f, 0xc3, 0xb6, 0xb9, 0x8e, 0x4b, 0xec, 0x5e, 0xf6, 0xb1, 0x27,
	0xde, 0xd4, 0xe1, 0xd7, 0xf6, 0x3f, 0x5c, 0xe2, 0xfe, 0x70, 0x68, 0xbb, 0x8e, 0xb1, 0xc3, 0xcf,
	0xae, 0xae, 0x30, 0xc4, 0x73, 0x9c, 0x51, 0x1f, 0x0b, 0x8e, 0xeb, 0x18, 0xbb, 0xdc, 0x09, 0x3d,
	0x77, 0xcc, 0x79, 0x06, 0x92, 0x83, 0xde, 0x15, 0xaa, 0xf6, 0xb8, 0xee, 0x9e, 0xeb, 0x9c, 0x8d,
	0x1d, 0x09, 0xdd, 0x37, 0xff, 0x5f, 0x83, 0xe6, 0x70, 0x71, 0xfd, 0x89, 0x4e, 0xd2, 0xc7, 0x7a,
	0x77, 0x48, 0xef, 0x69, 0x98, 0xf5, 0x6e, 0x41, 0x20, 0x04, 0x75, 0x16, 0x2e, 0xa6, 0xaa, 0xaf,
	0x8a, 0x6f, 0xde, 0x4c, 0xfd, 0x78, 0xb2, 0x98, 0xd1, 0x28, 0xf5, 0x16, 0x49, 0x98, 0x35, 0xd3,
	0x8c, 0x37, 0x4e, 0xc2, 0x52, 0xa4, 0xb5, 0xb5, 0x48, 0xff, 0x02, 0x74, 0x55, 0x00, 0x4c, 0xd5,
	0x53, 0xa7, 0xbc, 0x00, 0xe0, 0x5c, 0xce, 0xb1, 0xaa, 0x0c, 0x99, 0xaa, 0x90, 0x4e, 0x79, 0xd9,
	0xc1, 0xb9, 0x1c, 0xbd, 0x83, 0x67, 0x93, 0x78, 0x36, 0x8f, 0x23, 0x6e, 0x17, 0x93, 0xaf, 0x14,
	0x29, 0xa9, 0x8b, 0x94, 0xdc, 0xcb, 0x85, 0xca, 0x03, 0xb6, 0xcf, 0xd0, 0xb7, 0xd0, 0x25, 0x33,
	0x12, 0x4e, 0xc9, 0x4c, 0x14, 0x53, 0xe9, 0xd8, 0x96, 0x38, 0xf6, 0xbc, 0x28, 0x2f, 0x9c, 0x3c,
	0x80, 0x66, 0x22, 0x77, 0x8d, 0x6e, 0xeb, 0x4d, 0xa5, 0xf8, 0x08, 0xc9, 0xc5, 0x99, 0x18, 0x99,
	0xa0, 0xc9, 0x3e, 0x08, 0x02, 0xb7, 0xa5, 0x70, 0xb2, 0xf1, 0x49, 0x11, 0xfa, 0x35, 0xc0, 0x7d,
	0x5e, 0x6c, 0xdd, 0xb6, 0x00, 0xee, 0x6e, 0x54, 0x21, 0x2e, 0x80, 0xcc, 0xc3, 0xd5, 0x6a, 0x87,
	0xad, 0x63, 0xbb, 0x67, 0x0d, 0x8c, 0x0a, 0x6a, 0x81, 0x76, 0x6e, 0x39, 0x67, 0x7c, 0x33, 0xea,
	0x00, 0x5c, 0xb9, 0x3d, 0xeb, 0x68, 0x3c, 0xe0, 0x6b, 0x5e, 0xcd, 0xfc, 0x63, 0x15, 0xc0, 0x62,
	0x2c, 0x98, 0x46, 0x3c, 0x48, 0x4f, 0x0c, 0xff, 0x2b, 0x80, 0x95, 0x4b, 0x44, 0x12, 0x68, 0xb8,
	0xc5, 0x32, 0x2f, 0xa0, 0xdf, 0xc2, 0x56, 0x26, 0x16, 0xfb, 0x5c, 0xbd, 0xb4, 0xcf, 0x29, 0x6f,
	0xc9, 0x7d, 0xae, 0xad, 0x80, 0xc2, 0xe6, 0xb7, 0xb0, 0x45, 0xee, 0x49, 0x10, 0x92, 0xeb, 0x90,
	0x7a, 0x24, 0x15, 0x29, 0xa2, 0xe1, 0x76, 0xce, 0xb3, 0x52, 0x71, 0x73, 0x4a, 0x12, 0xde, 0x2e,
	0x09, 0x1f, 0x97, 0xf2, 0x66, 0xc9, 0xb1, 0x52, 0xde, 0x73, 0x58, 0xc2, 0x3c, 0x96, 0xf2, 0xcd,
	0xae, 0x29, 0xa4, 0x3a, 0x4b, 0xd8, 0x90, 0xd3, 0x5c, 0x38, 0x27, 0x8c, 0xc9, 0xa3, 0xba, 0x14,
	0x4a, 0x86, 0x95, 0x9a, 0xff, 0xac, 0x80, 0x7e, 0x99, 0xc4, 0xd3, 0x84, 0x32, 0x86, 0x7e, 0x06,
	0xdb, 0x59, 0x9b, 0xff, 0x21, 0x89, 0xa3, 0xa9, 0xda, 0xd2, 0xb2, 0xd5, 0xe3, 0x7b, 0xce, 0xe3,
	0xa0, 0xac, 0x63, 0x4b, 0x50, 0x5d, 0x82, 0x14, 0x53, 0x82, 0x5e, 0x42, 0x2b, 0x60, 0x5e, 0x48,
	0x19, 0x8b, 0x23, 0xf1, 0x1e, 0x1d, 0xeb, 0x01, 0x1b, 0x08, 0x9a, 0x87, 0x97, 0xe4, 0xae, 0x17,
	0x8f, 0x59, 0x85, 0x77, 0x15, 0x13, 0x5c, 0x00, 0xf1, 0xf7, 0x4f, 0x12, 0x4a, 0xd4, 0xfb, 0xe5,
	0x0b, 0x5b, 0x8a, 0x63, 0xa5, 0x67, 0x75, 0xbd, 0x62, 0x54, 0xd5, 0x4a, 0xfe, 0xaf, 0x0a, 0x74,
	0x86, 0xe9, 0xc2, 0x5f, 0x5e, 0x90, 0x94, 0x26, 0x01, 0x09, 0xd9, 0x46, 0x74, 0xcb, 0x71, 0xac,
	0xae, 0xc7, 0xf1, 0xed, 0x5a, 0x1c, 0x1b, 0xb2, 0xa2, 0xd7, 0x42, 0x96, 0x79, 0x2a, 0x8a, 0x53,
	0xaa, 0x1a, 0x42, 0xb6, 0x8f, 0x39, 0x71, 0x4a, 0x8b, 0x4b, 0x96, 0x80, 0x94, 0x97, 0x2c, 0x01,
	0x29, 0x2c, 0x80, 0x6c, 0x19, 0xc5, 0xd1, 0x72, 0x26, 0x27, 0xc6, 0x6a, 0x01, 0x1c, 0x2a, 0xb6,
	0xf9, 0xb7, 0x2a, 0xd4, 0xc7, 0x8c, 0x26, 0xbc, 0x97, 0x2c, 0x18, 0x4d, 0x22, 0x32, 0xcb, 0xa7,
	0x46, 0x46, 0x7f, 0x26, 0x6b, 0x4f, 0xe1, 0xed, 0x8c, 0x3c, 0x78, 0x82, 0xf0, 0xa6, 0x09, 0x89,
	0xb8, 0x17, 0xaf, 0x97, 0xbc, 0xba, 0xd9, 0x24, 0x09, 0xe6, 0x62, 0xe0, 0xca, 0x64, 0x7e, 0x35,
	0x23, 0x0f, 0x03, 0x8e, 0x7b, 0x2f, 0x61, 0x47, 0xcb, 0x61, 0x01, 0x84, 0xbe, 0x82, 0xf6, 0x3c,
	0x89, 0xf9, 0xfe, 0x5e, 0xe8, 0x74, 0xa0, 0x58, 0xbc, 0xd1, 0x95, 0xd3, 0x54, 0x5b, 0x4f, 0xd3,
	0xd7, 0xc2, 0xef, 0x5c, 0xdf, 0x35, 0xf5, 0x85, 0x5b, 0x75, 0x5c, 0xe0, 0xa0, 0x5f, 0xc1, 0x7e,
	0xd1, 0x28, 0x8f, 0x46, 0x3e, 0x5b, 0xc5, 0x1b, 0x15, 0x65, 0xfd, 0xc8, 0x67, 0x56, 0x8a, 0x0e,
	0x61, 0xef, 0x9e, 0x4c, 0x54, 0xb7, 0x5a, 0xdd, 0x2c, 0xb3, 0x7c, 0x37, 0x13, 0x0d, 0x33, 0x0b,
	0xcc, 0xef, 0xc0, 0x50, 0x75, 0xe8, 0xde, 0xd3, 0x24, 0x09, 0x7c, 0x2a, 0x7a, 0x97, 0x0a, 0x6d,
	0xb7, 0x52, 0x6a, 0xaa, 0x0a, 0x89, 0x33, 0xb1, 0xf9, 0xdf, 0x0a, 0x6c, 0x97, 0x76, 0x11, 0xf4,
	0x1b, 0x68, 0xc8, 0x6d, 0x44, 0x1c, 0xed, 0xe4, 0x6b, 0x5d, 0x09, 0xa5, 0x28, 0xac, 0xa0, 0x7c,
	0x8a, 0xa4, 0xf4, 0x21, 0x5b, 0xe2, 0xc5, 0x37, 0xfa, 0x29, 0xe8, 0x61, 0x10, 0xdd, 0x09, 0xbf,
	0xca, 0x64, 0x6a, 0x72, 0x7a, 0x9c, 0x84, 0xe6, 0x1d, 0x34, 0xa4, 0x82, 0xcf, 0x36, 0xb7, 0x2d,
	0xd0, 0xcf, 0xac, 0x4b, 0xcb, 0xe9, 0x0f, 0xfb, 0x46, 0x4d, 0xa0, 0xfa, 0xd6, 0xb1, 0xed, 0xbc,
	0x37, 0xea, 0x6b, 0x7d, 0x4f, 0xe3, 0xc3, 0xd6, 0x1e, 0x59, 0x03, 0xbb, 0x67, 0x34, 0xf8, 0xe6,
	0x70, 0xe4, 0x0e, 0x8e, 0x8d, 0x26, 0xff, 0x1a, 0xd8, 0xce, 0xb9, 0xa1, 0x9b, 0xff, 0xa9, 0x40,
	0xe7, 0x98, 0xa4, 0x84, 0xff, 0x0f, 0x3b, 0xa5, 0xc4, 0xa7, 0x09, 0x3a, 0x82, 0x5d, 0xe5, 0x00,
	0xc6, 0xd3, 0x46, 0x66, 0x98, 0xf4, 0xd4, 0xf3, 0xb2, 0xa7, 0xd8, 0xd1, 0x52, 0x64, 0x0f, 0xde,
	0x61, 0x65, 0x06, 0x3a, 0x00, 0x43, 0xe6, 0x9f, 0xcc, 0x3b, 0xe1, 0xec, 0xba, 0x98, 0x28, 0x1d,
	0xc1, 0x17, 0x89, 0x26, 0x06, 0xf1, 0x21, 0xff, 0x97, 0x19, 0x52, 0x1e, 0xc8, 0xe2, 0xf8, 0xa9,
	0x09, 0xf0, 0xae, 0x12, 0x15, 0x26, 0xcf, 0x21, 0xec, 0x65, 0xb8, 0xeb, 0x65, 0x4a, 0xbd, 0xf8,
	0xe6, 0x86, 0x51, 0xee, 0xdb, 0xda, 0xc1, 0x36, 0xce, 0x0c, 0x3f, 0x5a, 0xa6, 0xd4, 0x15, 0x02,
	0x73, 0x02, 0x3b, 0x6b, 0xd6, 0xf2, 0x92, 0x52, 0xd3, 0x89, 0x89, 0x77, 0x69, 0x38, 0xa7, 0x79,
	0x49, 0xc9, 0x71, 0x55, 0x15, 0x02, 0x35, 0xa0, 0x5e, 0x97, 0x06, 0x94, 0xb4, 0xad, 0x38, 0x8d,
	0xfe, 0x57, 0x01, 0x4d, 0xea, 0x7e, 0xda, 0x60, 0xe1, 0x13, 0xe0, 0x9a, 0x44, 0x7e, 0x1c, 0xc9,
	0xfc, 0xad, 0xa9, 0x09, 0x90, 0xf1, 0xac, 0x94, 0x43, 0xf8, 0xc8, 0x96, 0x9e, 0x21, 0xf2, 0x3f,
	0x9b, 0x86, 0xdb, 0x39, 0xcf, 0x5a, 0x6f, 0x92, 0xda, 0x5a, 0x93, 0x2c, 0xcf, 0x81, 0x46, 0x79,
	0x0e, 0xac, 0x55, 0x6e, 0x73, 0xbd, 0x72, 0xbf, 0x82, 0xf6, 0x22, 0x0a, 0xe3, 0xc9, 0x5d, 0xb1,
	0xbe, 0x20, 0x63, 0x59, 0xe9, 0x51, 0xe3, 0x2f, 0xd5, 0xda, 0xe8, 0xfc, 0xe2, 0xc7, 0x00, 0x00,
	0x00, 0xff, 0xff, 0x7a, 0xbe, 0xcd, 0x1f, 0xc9, 0x11, 0x00, 0x00,
}
